---
generic object: ALItemizedJob
code: |
  x.source
  if not x.is_self_employed:
    x.employer.name.first
  else:
    x.employer.name.first = "Self-employed"
    x.employer.name.last = ""
    x.employer.phone = ""
    x.employer.address.address = ""
  x.times_per_year
  x.to_add.complete_attribute = 'complete'
  x.to_subtract.complete_attribute = 'complete'
  if x.is_part_time:
    x.to_add["part time"].is_hourly = x.is_hourly
  else:
    x.to_add["full time"].is_hourly = x.is_hourly
  x.to_add.gather()
  x.to_subtract["federal_taxes"].exists = True
  x.to_subtract.gather()
  x.complete = True
---
generic object: ALItemizedJob 
code: |
  if x.to_add[i].exists:
    x.to_add[i].value
  #else: 
  #  x.to_add[i].value = 0
  x.to_add[i].complete = True
---
generic object: ALItemizedJob 
code: |
  if x.to_subtract[i].exists:
    x.to_subtract[i].value
  #else: 
  #  x.to_subtract[i].value = 0
  x.to_subtract[i].complete = True
---
generic object: ALItemizedJob 
code: | 
  x.to_subtract.there_are_any = True
---
#generic object: ALItemizedJob 
#code: | 
#  x.to_subtract[i].value 
#  x.to_subtract[i].complete = True 
--- 
sets:
  - x.employer.name.first
id: employer
generic object: ALItemizedJob
question: |
  Tell us who employs you as a ${ x.source }
fields:
  - I am self-employed: x.is_self_employed
    datatype: yesno
  - Employer's name: x.employer.name.first
    show if:
      variable: x.is_self_employed
      is: False
  - note: |
      ---

      Employer's contact information
    show if:
      variable: x.is_self_employed
      is: False
  - Street address: x.employer.address.address
    address autocomplete: True
    show if:
      variable: x.is_self_employed
      is: False
  - Unit: x.employer.address.unit
    required: False
    show if:
      variable: x.is_self_employed
      is: False
  - City: x.employer.address.city
    show if:
      variable: x.is_self_employed
      is: False
  - State: x.employer.address.state
    show if:
      variable: x.is_self_employed
      is: False
  - Zip or postal code: x.employer.address.zip
    required: False
    show if:
      variable: x.is_self_employed
      is: False
  - Phone number: x.employer.phone_number
    show if:
      variable: x.is_self_employed
      is: False
---
generic object: ALItemizedJob
code: |
  if defined('x.to_add["full time"]'):
    x.to_add["full time"].exists = True
  else:
    x.to_add["full time"].exists = False
---
generic object: ALItemizedJob
code: |
  if defined('x.to_add["part time"]'):
    x.to_add["part time"].exists = True
  else:
    x.to_add["part time"].exists = False
---
generic object: ALItemizedJob
code: |
  x.to_subtract["federal_taxes"].exists = True
---
generic object: ALItemizedJob
code: |
  x.to_subtract["state_taxes"].exists = True
---
id: itemized job line items
generic object: ALItemizedJob
question: |
  Enter info from your paystub for your job as a ${ x.source }
fields:
  - label: |
      % if x.is_hourly:
      What is your hourly pay for this job?
      % else:
      What are your wages for this job?
      % endif
    field: x.to_add['full time'].value
    datatype: currency
    show if:
      code: x.is_part_time is False
  - label: |
      % if x.is_hourly:
      What is your hourly pay for this job?
      % else:
      What are your wages for this job?
      % endif
    field: x.to_add['part time'].value
    datatype: currency
    show if:
      code: x.is_part_time is True
  - I earn overtime pay for this job: x.to_add['overtime'].exists
    datatype: yesno
  - What is your overtime pay for this job?: x.to_add['overtime'].value
    datatype: currency
    show if: x.to_add['overtime'].exists
    required: False
  - I earn tips at this job: x.to_add['tips'].exists
    datatype: yesno
  - What is your tip pay for this job?: x.to_add['tips'].value
    datatype: currency
    show if: x.to_add['tips'].exists
    required: False
  - The job has other incomes: x.to_add.there_is_another
    datatype: yesno
---
id: itemized job deductions
generic object: ALItemizedJob
question: |
  Enter info from your paystub for your job as a ${ x.source }
fields:
  - What is your federal tax amount?: x.to_subtract['federal_taxes'].value
    datatype: currency
    required: False
  - I am claiming federal tax exemptions: x.claiming_federal_tax_exemptions
    datatype: yesno
  - Which federal tax exemptions?: x.federal_tax_exemptions
    datatype: checkboxes
    choices: 
      - Personal
      - Dependent
    show if: x.claiming_federal_tax_exemptions
    required: False
  - What is your state tax amount?: x.to_subtract['state_taxes'].value
    datatype: currency
    required: False
  - I am claiming state tax exemptions: x.claiming_state_tax_exemptions
    datatype: yesno
  - Which state tax exemptions?: x.state_tax_exemptions
    datatype: checkboxes
    choices: 
      - Personal
      - Dependent
      - Nonresident
      - Part-year resident
      - Adoption
      - Age 65 or over
      - Blindness
      - Massachusetts bank interest
      - Medical/dental
      - Schedules B and D excess
    show if: x.claiming_state_tax_exemptions
    required: False
  - I pay for FICA and medicare: x.to_subtract['fica_medicare'].exists
    datatype: yesno
  - What do you pay for medical insurance?: x.to_subtract['fica_medicare'].value
    datatype: currency
    required: False
    show if: x.to_subtract['fica_medicare'].exists
  - I pay for medical insurance: x.to_subtract['medical_insurance'].exists
    datatype: yesno
  - What do you pay for medical insurance?: x.to_subtract['medical_insurance'].value
    datatype: currency
    required: False
    show if: x.to_subtract['medical_insurance'].exists
  - I pay union dues: x.to_subtract['union_dues'].exists
    datatype: yesno
  - What do you pay for union dues?: x.to_subtract['union_dues'].value
    datatype: currency
    required: False
    show if: x.to_subtract['union_dues'].exists
  - The job has other deductions: x.to_subtract.there_is_another
    datatype: yesno