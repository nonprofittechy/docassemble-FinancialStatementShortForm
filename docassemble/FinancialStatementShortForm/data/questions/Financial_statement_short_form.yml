---
include:
  - docassemble.AssemblyLine:al_package.yml
  - docassemble.ALToolbox:al_income.yml
  - docassemble.ALMassachusetts:al_massachusetts.yml
  - docassemble.MassAccess:massaccess.yml
  - ItemizedJobList_custom.yml
  - review.yml
---
metadata:
  title: |
    Probate and Family Court Financial statement (short form) (CJD 301S)
  short title: |
    Financial Statement (short form)
  tags:
    - FA-00-00-00-00
  authors:
    - Lemma Legal
    - Mia Bonardi
    - Plocket
    - Caroline Robinson
    - Lily Yang
    - Jeff Wolf
    - Oonagh Doherty
---
mandatory: True
comment: |
  This contains metadata that will not be overwritten if this YAML file is included in another
  file. Each file gets its own key in the interview_metadata dictionary.
  Most keys are not currently used at runtime, other than "allowed courts".
code: |
  interview_metadata
  if not defined("interview_metadata['Financial_statement_short_form']"):
    interview_metadata.initializeObject("Financial_statement_short_form")
    interview_metadata["Financial_statement_short_form"].update({
      "al_weaver_version": "1.5.0",
      "generated on": "2022-01-16",
      "title": "Probate and Family Court Financial statement (short form) (CJD 301S)",
      "short title": "Financial Statement (short form)",
      "description": "You must file this form in all cases in the Probate and Family Court where money or support is an issue and your annual income is less than $75,000.",
      "original_form": "https://courtforms.jud.state.ma.us/publicforms/PFC0002",
      "allowed courts": [
        "Probate and Family Court",
      ],
      "categories": [
        "FA-00-00-00-00",
      ],        
      "logic block variable": "interview_order_Financial_statement_short_form",
      "attachment block variable": "Financial_statement_short_form_attachment",
      "typical role": "unknown",
    })
---
code: |
  interview_metadata['main_interview_key'] =  'Financial_statement_short_form'
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name =  'docassemble-FinancialStatementShortForm'
---
code: |
  interview_short_title = "Describe your financial situation"
---
code: |
  al_form_type = 'other'
---
objects:
  - users: ALPeopleList.using(ask_number=True,target_number=1)
  - other_parties: ALPeopleList.using(ask_number=True,target_number=1)
  - employers: JobList.using(ask_number=True,target_number=employer_number,
        complete_attribute='period')
  - creditors: ALPeopleList.using(ask_number=True,target_number=creditor_number,
        complete_attribute='weekly_payment')
  - attoneys: ALPeopleList
  - jobs: ALItemizedJobList.using(complete_attribute='complete', ask_number=True)
  - other_incomes: ALIncomeList
  - base_pay_job_list: ALItemizedJobList.using(auto_gather=False)
---
sections:
  - review_Financial_statement_short_form: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_Financial_statement_short_form
code: |
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["Financial_statement_short_form"]["allowed courts"]
  nav.set_section('review_Financial_statement_short_form')
  # Below sets the user_role by asking a question.
  # You can set user_role directly instead to either 'plaintiff' or 'defendant'
  if gross_annual_income >= 75000:
    income_too_high
  collect_documents
  legal_court_document_reminder
    
  set_progress(11)
  user_ask_role
  
  users.gather()
  users[0].address.address
  users[0].phone_number
  set_progress(22)
  users[0].birthdate
  users[0].ssn
  users[0].health_insurance
  set_parts(subtitle=str(users))
  
  if user_represented:
    attorneys[0].address
    attorneys[0].phone_number
    attorney_signature_date
  set_progress(33)
  
  other_parties.gather()
    
  trial_court.division
  docket_number
  
  signature_date
  
  set_progress(33)
  
  jobs.gather()
  #need to add x.which_tips_commissions
  review_jobs
  
  set_progress(44)
    
  #list_incomes
  #review_income_screen
  #
  #set_progress(55)
  #creditors.gather()
  #
  #  
  #set_progress(66)
  #
  #exemptions_federal_income_tax
  #assets_real_estate_address
  interview_order_Financial_statement_short_form = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  Financial_statement_short_form_intro
  interview_order_Financial_statement_short_form
  signature_date
  # Save anonymized interview statistics (customize the saved data below)
  store_variables_snapshot(data={'zip': users[0].address.zip})
  Financial_statement_short_form_preview_question
  basic_questions_signature_flow
  attorneys[0].signature
  users[0].signature
  Financial_statement_short_form_download
---
id: your address
sets:
  - users[0].address.address
  - users[0].address.city
  - users[0].address.zip
  - users[0].address.unit
  - users[0].address.state
  - users[0].address.country
question: |
  What is your address and phone number?
fields:
  - code: |
      users[0].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
  - Phone number: users[0].phone_number
---
id: is the user the plaintiff or defendant?
question: |
  Did you file the petition for divorce?
fields: 
  - no label: user_ask_role
    datatype: yesnoradio
  - note: |
      Okay, you are the **Plaintiff** in this case. The other 
      side is the **Defendant**.
    show if:
      variable: user_ask_role
      is: True
  - note: |
      Okay, you are the **Defendant** in this case. The other 
      side is the **Plaintiff**.
    show if:
      variable: user_ask_role
      is: False
---
sets:
  - other_parties[i].name.first
  - other_parties[i].name.last
  - other_parties[i].name.middle
  - other_parties[i].name.suffix
id: names of opposing parties
question: |
  % if user_started_case:
  Name of ${ ordinal(i) } **defendant** in this
  matter
  % else:
  Name of ${ ordinal(i) } **plaintiff** in this matter
  % endif
fields:
  - code: |
      other_parties[i].name_fields(person_or_business='person')
---
comment: |
  This question is used to introduce your interview. Please customize
id: Probate_and_Family_Court_Financial_statement_short_form_CJD_301S
continue button field: Financial_statement_short_form_intro
question: |
  Probate and Family Court Financial statement (short form) (CJD 301S)
subquestion: |
  The Probate and Family Court needs a Financial Statement from each person in:
  
  * divorce cases,
  * separate support cases,
  * custody cases,
  * child support cases, 
  * hearings that involve division of property, and
  * other financial matters.
  
  If your yearly income, is less than $75,000, keep going. We will help you complete the short form. 
  
  If your income is more than $75,000 a year, you need to use the Financial Statement long form.
  
  What is your yearly income **before** taxes?
fields:  
  - "Your annual income before taxes": gross_annual_income
    datatype: currency 
---
id: docket number
question: |
  What is the docket number for your case?
fields:
  - I don't know the docket number: dont_know_docket_number
    datatype: yesno    
  - Docket number: docket_number
    hide if: dont_know_docket_number
validation code: |
  # This should be safe to 
  if dont_know_docket_number:
    docket_number = ' ' 
---
id: Kickout more than 75,000 
question: |
  You need to use the long form Financial Statement
subquestion: |
  If your yearly income, before taxes, is $75,000  or more, you cannot use the Financial Statement short form.
  
  You need the Financial Statement [Long Form](https://www.mass.gov/info-details/probate-and-family-court-financial-statement-long-form-cjd-301l) and you should probably [talk to a lawyer](https://masslrf.org). 
 
sets: income_too_high
back button label: |
  Wait, go back
buttons:
  - Learn More: exit
    url: https://www.mass.gov/info-details/probate-and-family-court-financial-statement-long-form-cjd-301l
---
id: Collect documents
question: | 
  Gather documents
subquestion: |
  The court needs to know about your:
  
    * income,
    * expenses,
    * debts and 'liabilities', and 
    * anything you own that has financial value. These things are 'assets.' 
  
  To make it easier to answer questions about your finances, gather documents like:
    
    * Pay stubs for the last 12 months, if you have a salary.
    * Gas and electric bills, for the last 12 months.
    * Telephone bills, for the last 3 months.
    * Bank statements for the last 3 months.
    * Tax returns for the last year.
    * Most recent mortgage statement, deed or other document that states the date of purchase, price and lot number, if you own a house or land.
    * Loan documents.
continue button field: collect_documents
---
id: legal document reminder
question: |
  Please remember

subquestion: |
  We are filling out legal documents that you will be filing in a court of law.
  
  Be sure that all your answers are true, as far as you know. 
continue button field: legal_court_document_reminder
---
id: Income from employment
question: |
  Income
subquestion: |
  Start with your income from employment.
  
  Who do you work for?
fields:
  - no label: employment_type
    datatype: checkboxes
    choices:
    - I work for at least 1 employer: employed
    - I am self-employed: self
    none of the above: |
      I am unemployed
---
id: how many employers
question: | 
  How many employers do you have?
fields:
  - Employers: employer_number
    datatype: integer
---
id: how many creditors
question: | 
  How many creditors do you have?
fields:
  - Creditors: creditor_number
    datatype: integer
---
id: creditor information
generic object: Individual
question: | 
  % if creditors.target_number > 1:
  Tell me about your ${ ordinal(i) } creditor.
  % else:
  Tell me about your creditor.
  % endif
subquestion: | 
  Don't list anything you already listed in youre weekly expenses here.
fields:
  - Creditor's name: creditors[i].name
  - Nature of debt: creditors[i].nature_of_debt
  - Date incurred: creditors[i].date_incurred
    datatype: date
  - Amount due: creditors[i].amount_due
    datatype: currency
  - Weekly payment: creditors[i].weekly_payment
    datatype: currency
---
id: Employer information
generic object: Individual
question: | 
  % if employers.target_number > 1:
  Tell me about your ${ ordinal(i) } job.
  % else:
  Tell me about your job.
  % endif
subquestion: |  
  Look at your most recent pay stubs.
fields:
  - Employer's name: employers[i].employer
  - Employer's address: employers[i].employer_address
    required: False
    address autocomplete: True
  - Phone number of employer: employers[i].employer_phone
    required: False
  - Is this an hourly job?: employers[i].is_hourly
    datatype: yesno
  - Hourly rate: employers[i].hourly_rate
    datatype: currency
    show if: employers[i].is_hourly
    hint: $/hour
  - Average number of hours worked each pay check: employers[i].hours_per_period
    datatype: integer
    show if: employers[i].is_hourly    
  - Gross pay each typical pay check: employers[i].gross_pay
    datatype: currency    
  - How often do you get paid?: employers[i].period
    datatype: integer
    code: |
      period_list()
---
id: birthdate
question: |
  What is your birthdate?
fields:
  - "Date of birth": users[0].birthdate
    datatype: BirthDate
---
id: health insurance
question: |
  Do you have health insurance?
fields:
  - "I have health insurance": users[0].health_insurance
    datatype: yesnoradio
  - "Health insurance provider": users[0].health_insurance_provider
    show if: users[0].health_insurance
    maxlength: 58
---
id: ssn
question: |
  What are the last 4 digits of your Social Security Number?
fields: 
  - Last 4 Digits of SSN: users[0].ssn
    datatype: integer
    required: False
    maxlength: 4
    minlength: 4
---
#  - "Number of children": users_children_number
#    datatype: number
#  - "Occupation": users_occupation
#    maxlength: 32
---
id: users attorney
question: |
  Do you have an attorney for this matter?
fields:
  - no label: user_represented
    datatype: yesnoradio
---
id: attorney info
question: |
  Attorney information
fields:
  - "Date of attorney signature": attorney_signature_date
    datatype: date
  - Attorney's name: attorneys[0].name
  - Attorney's address: attorneys[0].address
    required: False
    address autocomplete: True
  - Attorney's phone number: attorneys[0].phone_number
    required: False
  - "Attorney's BBO number": attorney_bbo_number
    maxlength: 30
    datatype: integer
---
id: preview Financial_statement_short_form
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Make changes" button
  to edit your answers.

  ${ action_button_html(url_action('review_Financial_statement_short_form'), label='Make changes', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: Financial_statement_short_form_preview_question    
---
code: |
  signature_fields = ['attorneys[0].signature', 'users[0].signature']
---
id: download Financial_statement_short_form
event: Financial_statement_short_form_download
question: |
  Your form is ready to download.
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Make changes" button to fix any mistakes.

  ${ action_button_html(url_action('review_Financial_statement_short_form'), label='Make changes', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

progress: 100
---
objects:
  - Financial_statement_short_form_post_interview_instructions: ALDocument.using(title="Instructions", filename="Financial_statement_short_form_next_steps.docx", enabled=True, has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
  - Financial_statement_short_form_attachment: ALDocument.using(title="Probate and Family Court Financial statement (short form) (CJD 301S)", filename="Financial_statement_short_form_CJD-301S_fillable.pdf", enabled=True, has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[Financial_statement_short_form_post_interview_instructions,Financial_statement_short_form_attachment], filename="Financial_statement_short_form_package.pdf", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[Financial_statement_short_form_attachment], filename="Financial_statement_short_form_package.pdf", title="All forms to download for your records", enabled=True)
---
attachments:
  - name: Financial statement short form post interview instructions
    filename: Post-interview-instructions     
    variable name: Financial_statement_short_form_post_interview_instructions[i] 
    skip undefined: True
    docx template file: Financial_statement_short_form_next_steps.docx
  - name: Financial statement short form attachment
    filename: Financial_statement_short_form     
    variable name: Financial_statement_short_form_attachment[i]        
    skip undefined: True
    pdf template file: Financial_statement_short_form_CJD-301S_fillable.pdf
    fields:
      - "trial_court_division": ${ trial_court.division }
      - "trial_court_division__2": ${ trial_court.division }
      - "trial_court_division__3": ${ trial_court.division }
      - "trial_court_division__3": ${ trial_court.division }
      - "docket_number": ${ docket_number }
      - "docket_number__2": ${ docket_number }
      - "docket_number__3": ${ docket_number }
      - "docket_number__3": ${ docket_number }
      - "plaintiff": |
          % if user_ask_role:
          ${ users[0] }
          % else: 
          ${ other_parties[0] }
          % endif
      - "defendant": |
          % if not user_ask_role:
          ${ users[0] }
          % else: 
          ${ other_parties[0] }
          % endif
      - "users_name": ${ users[0] }
      - "users_address_zip": ${ users[0].address.zip }
      - "users_address_address": ${ users[0].address.address }
      - "users_address_state": ${ users[0].address.state }
      - "users_address_city": ${ users[0].address.city }
      - "users_phone_number": ${ users[0].phone_number }
      - "creditor": ${ creditors[0].name }
      - "creditor1": ${ creditors[1].name }
      - "creditor2": ${ creditors[2].name }
      - "creditor3": ${ creditors[3].name }
      - "liability_incurred": ${ creditors[0].date_incurred }
      - "liability_weekly_payment_amount": ${ currency(creditors[0].weekly_payment) }
      - "liability": ${ creditors[0].nature_of_debt }
      - "liability_due_value": ${ currency(creditors[0].amount_due) }
      - "liability1_weekly_payment_amount": ${ currency(creditors[1].weekly_payment) }
      - "liability1": ${ creditors[1].nature_of_debt }
      - "liability1_incurred": ${ creditors[1].date_incurred }
      - "liability1_due_value": ${ currency(creditors[1].amount_due) }
      - "liability2": ${ creditors[2].nature_of_debt }
      - "liability2_weekly_payment_amount": ${ currency(creditors[2].weekly_payment) }
      - "liability2_incurred": ${ creditors[2].date_incurred }
      - "liability2_due_value": ${ currency(creditors[2].amount_due) }
      - "liability3_weekly_payment_amount": ${ currency(creditors[3].weekly_payment) }
      - "liability3": ${ creditors[3].nature_of_debt }
      - "liability3_incurred": ${ creditors[3].date_incurred }
      - "liability3_due_value": ${ currency(creditors[3].amount_due) }
      - "liabilities_total_due_value": ${ currency(liabilities_total_due_value) }
      - "liabilities_total_weekly_payment_amount": ${ currency(liabilities_total_weekly_payment_amount) }
      - "signature_date": ${ signature_date }
      - "users_signature": ${ users[0].signature_if_final(i) }
      - "attorney_signature": ${ attorneys[0].signature_if_final(i) }
      - "attorney_name": ${ attorneys[0] }
      - "attorney_address_address": ${ attorneys[0].address.address }
      - "attorney_address_zip": ${ attorneys[0].address.zip }
      - "attorney_address_state": ${ attorneys[0].address.state }
      - "attorney_address_city": ${ attorneys[0].address.city }
      - "attorney_phone_number": ${ attorneys[0].phone_number }
      - "employers1_address_address": ${ jobs[0].employer.address.address }
      - "employers1": ${ jobs[0].employer.name }
      - "employers1_phone_number": ${ jobs[0].employer.phone_number }
      - "employers1_address_zip": ${ jobs[0].employer.address.zip }
      - "employers1_address_city": ${ jobs[0].employer.address.city }
      - "employers1_address_state": ${ jobs[0].employer.address.state }
      - "users_social_security_number": ${ users[0].ssn }
      - "users_date_of_birth": ${ users[0].birthdate }
      - "users_children_number": ${ "{:,.2f}".format(users_children_number) }
      - "users_occupation": ${ jobs[0].source }
      - "has_health_insurance_yes": ${ users[0].health_insurance }
      - "has_health_insurance_no": ${ not users[0].health_insurance }
      - "health_insurance_provider": ${ users[0].health_insurance_provider }
      - "base_pay_is_salary": ${ True if True in [not job.is_part_time and not job.is_hourly for job in jobs] else False }
      - "base_pay_is_wages": ${ True if True in [not job.is_part_time and job.is_hourly for job in jobs] else False }
      - "income_base_pay_amount": ${ currency(jobs.total(times_per_year=52, source=["full time"])) }
      - "income_overtime_amount": |
          ${ currency(jobs.total(times_per_year=52, source=["overtime"])) }
      - "income_part_time_amount": ${ currency(jobs.total(times_per_year=52, source=["part time"])) }
      - "income_self_employment_amount": ${ currency(jobs.total(times_per_year=52, source=["self employment"])) }
      - "income_tips_amount": ${ currency(jobs.total(times_per_year=52, source=["tips"])) }
      - "bonuses": ${ bonuses }
      - "commissions": ${ commissions }
      - "income_commissions_bonuses_amount": ${ currency(income_commissions_bonuses_amount) }
      - "interest": ${ interest }
      - "dividends": ${ dividends }
      - "income_dividends_interest_amount": ${ currency(income_dividends_interest_amount) }
      - "trusts": ${ trusts }
      - "annuities": ${ annuities }
      - "income_trusts_annuities_amount": ${ currency(income_trusts_annuities_amount) }
      - "pensions": ${ pensions }
      - "retirement_funds": ${ retirement_funds }
      - "income_pensions_retirement_amount": ${ currency(income_pensions_retirement_amount) }
      - "income_social_security_amount": ${ currency(income_social_security_amount) }
      - "disability": ${ disability }
      - "unemployment_insurance": ${ unemployment_insurance }
      - "workers_compensation": ${ workers_compensation }
      - "income_disability_ui_workers_comp_amount": ${ currency(income_disability_ui_workers_comp_amount) }
      - "income_public_benefits_amount": ${ currency(income_public_benefits_amount) }
      - "child_support": ${ child_support }
      - "alimony_actually_received": ${ alimony_actually_received }
      - "income_child_support_alimony_amount": ${ currency(income_child_support_alimony_amount) }
      - "income_rental_amount": ${ currency(income_rental_amount) }
      - "income_royalties_amount_amount": ${ currency(income_royalties_amount_amount) }
      - "income_household_member_contributions_amount": ${ currency(income_household_member_contributions_amount) }
      - "income_other1_amount": ${ currency(income_other1_amount) }
      - "income_other2_amount": ${ currency(income_other2_amount) }
      - "income_other_sources": ${ income_other_sources }
      - "total_gross_weekly_income_amount": |
          ${ currency(jobs.gross_total(times_per_year=52)) }
      - "exemptions_federal_income_tax": |
          ${ comma_and_list([job.federal_tax_exemptions.true_values() for job in jobs if job.claiming_federal_tax_exemptions]) }
      - "deductions_federal_income_tax_amount": |
          ${ currency(jobs.deduction_total(times_per_year=52, source='federal_taxes')) }
      - "exemptions_state_income_tax": |
          ${ comma_and_list([job.state_tax_exemptions.true_values() for job in jobs if job.claiming_state_tax_exemptions]) }
      - "deductions_state_income_tax_amount": |
          ${ currency(jobs.deduction_total(times_per_year=52, source='state_taxes')) }
      - "deductions_fica_medicare_amount": ${ currency(jobs.deduction_total(times_per_year=52, source='fica_medicare')) }
      - "deductions_medical_insurance_amount": |
          ${ currency(jobs.deduction_total(times_per_year=52, source='medical_insurance')) }
      - "deductions_union_dues_amount": ${ currency(jobs.deduction_total(times_per_year=52, source='union_dues')) }
      - "deductions_total_amount": ${ currency(jobs.deduction_total(times_per_year=52)) }
      - "adjusted_net_weekly_income_amount": |
          ${ currency(jobs.gross_total(times_per_year=52) - jobs.deduction_total(times_per_year=52)) }
      - "deduction_loan_repayment_yes": ${ deduction_loan_repayment_yes }
      - "deduction_savings_yes": ${ deduction_savings_yes }
      - "deductions_credit_union_loan_savings_amount": ${ currency(deductions_credit_union_loan_savings_amount) }
      - "deductions_savings_amount": ${ currency(deductions_savings_amount) }
      - "deductions_retirement_amount": ${ currency(deductions_retirement_amount) }
      - "other_deductions_specifics": ${ other_deductions_specifics }
      - "deductions_child_support_compensation_401k_etc_amount": ${ currency(deductions_child_support_compensation_401k_etc_amount) }
      - "other_deductions_total_amount": ${ currency(other_deductions_total_amount) }
      - "net_weekly_income_amount": ${ currency(net_weekly_income_amount) }
      - "gross_yearly_income_last_year_amount": ${ currency(gross_yearly_income_last_year_amount) }
      - "years_paid_into_social_security": ${ "{:,.2f}".format(years_paid_into_social_security) }
      - "expense_life_insurance_amount": ${ currency(expense_life_insurance_amount) }
      - "expense_rent_amount": ${ currency(expense_rent_amount) }
      - "expense_medical_insurance_amount": ${ currency(expense_medical_insurance_amount) }
      - "expense_home_insurance_amount": ${ currency(expense_home_insurance_amount) }
      - "expense_medical_uninsured_amount": ${ currency(expense_medical_uninsured_amount) }
      - "expense_maintenance_amount": ${ currency(expense_maintenance_amount) }
      - "expense_heat_amount": ${ currency(expense_heat_amount) }
      - "expense_toiletries_amount": ${ currency(expense_toiletries_amount) }
      - "expense_electricity_gas_amount": ${ currency(expense_electricity_gas_amount) }
      - "expense_motor_vehicles_amount": ${ currency(expense_motor_vehicles_amount) }
      - "expense_phone_amount": ${ currency(expense_phone_amount) }
      - "expense_motor_vehicle_payment_amount": ${ currency(expense_motor_vehicle_payment_amount) }
      - "expense_water_sewer_amount": ${ currency(expense_water_sewer_amount) }
      - "expense_child_care_amount": ${ currency(expense_child_care_amount) }
      - "expense_food_amount": ${ currency(expense_food_amount) }
      - "expense_house_supplies_amount": ${ currency(expense_house_supplies_amount) }
      - "expense_other_amount": ${ currency(expense_other_amount) }
      - "expense_others_amount": ${ currency(expense_others_amount) }
      - "expense_laundry_cleaning_amount": ${ currency(expense_laundry_cleaning_amount) }
      - "expenses_other_explanation": ${ expenses_other_explanation }
      - "expense_clothing_amount": ${ currency(expense_clothing_amount) }
      - "total_weekly_expenses_amount": ${ currency(total_weekly_expenses_amount) }
      - "legal_fees_amount": ${ currency(legal_fees_amount) }
      - "legal_fees_incurred_to_date_against_retainer_amount": ${ currency(legal_fees_incurred_to_date_against_retainer_amount) }
      - "legal_fees_total_miniimum_amount": ${ currency(legal_fees_total_miniimum_amount) }
      - "legal_fees_total_maximum_amount": ${ currency(legal_fees_total_maximum_amount) }
      - "assets_real_estate_address": ${ assets_real_estate_address }
      - "assets_real_estate_name_on_title": ${ assets_real_estate_name_on_title }
      - "assets_real_estate_fair_market_value": ${ currency(assets_real_estate_fair_market_value) }
      - "assets_real_estate_mortgage_value": ${ currency(assets_real_estate_mortgage_value) }
      - "assets_real_estate_equity_value": ${ currency(assets_real_estate_equity_value) }
      - "assets_motor_vehicle_fair_market_value": ${ currency(assets_motor_vehicle_fair_market_value) }
      - "assets_motor_vehicle_loan_amount": ${ currency(assets_motor_vehicle_loan_amount) }
      - "assets_motor_vehicle_equity_value": ${ currency(assets_motor_vehicle_equity_value) }
      - "assets_motor_vehicle1_fair_market_value": ${ currency(assets_motor_vehicle1_fair_market_value) }
      - "assets_motor_vehicle1_loan_amount": ${ currency(assets_motor_vehicle1_loan_amount) }
      - "assets_motor_vehicle1_equity_value": ${ currency(assets_motor_vehicle1_equity_value) }
      - "assets_retirement_plan_value": ${ currency(assets_retirement_plan_value) }
      - "assets_retirement_plan1_value": ${ currency(assets_retirement_plan1_value) }
      - "assets_retirement_plan2_value": ${ currency(assets_retirement_plan2_value) }
      - "assets_retirement_plan_name_and_account_number": ${ assets_retirement_plan_name_and_account_number }
      - "assets_tax_deferred_annuity_plan_value": ${ currency(assets_tax_deferred_annuity_plan_value) }
      - "assets_life_insurance": ${ currency(assets_life_insurance) }
      - "assets_account_name_and_number": ${ assets_account_name_and_number }
      - "assets_account_value": ${ currency(assets_account_value) }
      - "assets_account_name_and_number1": ${ assets_account_name_and_number1 }
      - "assets_account_value1": ${ assets_account_value1 }
      - "assets_account_name_and_number2": ${ assets_account_name_and_number2 }
      - "assets_account_value2": ${ assets_account_value2 }
      - "assets_stocks_and_bonds": ${ assets_stocks_and_bonds }
      - "assets_stocks_and_bonds_value": ${ currency(assets_stocks_and_bonds_value) }
      - "assets_stocks_and_bonds1": ${ assets_stocks_and_bonds1 }
      - "assets_stocks_and_bonds_value1": ${ assets_stocks_and_bonds_value1 }
      - "total_assets_value": ${ currency(total_assets_value) }
      - "attorney_signature_date": ${ attorney_signature_date }
      - "attorney_bbo_number": ${ attorney_bbo_number }
